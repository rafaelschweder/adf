{
	"name": "DimCustomer",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DimCustomer_OLAP",
						"type": "DatasetReference"
					},
					"name": "DimCustomer"
				},
				{
					"dataset": {
						"referenceName": "Customer_OLTP",
						"type": "DatasetReference"
					},
					"name": "Customer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimCustomer_OLAP",
						"type": "DatasetReference"
					},
					"name": "DestDim"
				}
			],
			"transformations": [
				{
					"name": "CreateHash"
				},
				{
					"name": "Exists"
				},
				{
					"name": "LookupDates"
				},
				{
					"name": "ModificationDates"
				},
				{
					"name": "AlterRows"
				}
			],
			"script": "source(output(\n\t\tCustomerID as integer,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPhone as string,\n\t\tInsertedDate as timestamp,\n\t\tUpdatedDate as timestamp,\n\t\tHashKey as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimCustomer\nsource(output(\n\t\tCustomerID as integer,\n\t\tNameStyle as boolean,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPhone as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Customer\nCustomer derive(HashKey = sha1(FirstName+LastName+CompanyName)) ~> CreateHash\nCreateHash, DimCustomer exists(CreateHash@HashKey == DimCustomer@HashKey,\n\tnegate:true,\n\tbroadcast: 'auto')~> Exists\nExists, DimCustomer lookup(Customer@CustomerID == DimCustomer@CustomerID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDates\nLookupDates derive(InsertedDate = iif(isNull(InsertedDate), currentTimestamp(), InsertedDate),\n\t\tUpdatedDate = currentTimestamp()) ~> ModificationDates\nModificationDates alterRow(upsertIf(true())) ~> AlterRows\nAlterRows sink(input(\n\t\tCustomerID as integer,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPhone as string,\n\t\tInsertedDate as timestamp,\n\t\tUpdatedDate as timestamp,\n\t\tHashKey as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['CustomerID'],\n\tformat: 'table',\n\tmapColumn(\n\t\tCustomerID = Customer@CustomerID,\n\t\tTitle = Customer@Title,\n\t\tFirstName = Customer@FirstName,\n\t\tMiddleName = Customer@MiddleName,\n\t\tLastName = Customer@LastName,\n\t\tSuffix = Customer@Suffix,\n\t\tCompanyName = Customer@CompanyName,\n\t\tSalesPerson = Customer@SalesPerson,\n\t\tEmailAddress = Customer@EmailAddress,\n\t\tPhone = Customer@Phone,\n\t\tInsertedDate,\n\t\tUpdatedDate,\n\t\tHashKey = CreateHash@HashKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DestDim"
		}
	}
}